# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - appdistribunaia

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

          # PASO 1: Iniciar sesión en Azure (Asegúrate de que este paso ya exista o añádelo)
      # Utiliza el secreto AZURE_CREDENTIALS que el portal debió crear automáticamente.
    - name: Log in to Azure
      uses: azure/login@v1
      with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # PASO 2: Iniciar sesión en Azure Container Registry (ACR)
      # Este comando utiliza la sesión de Azure iniciada en el paso anterior.
      # Reemplaza el bloque 'docker/login-action@v2' con este.
    - name: Log in to Azure Container Registry
      run: az acr login --name distribunaia  # <-- Usa el nombre corto de tu ACR aquí

      # PASO 3: Construir y subir la imagen (Este paso probablemente ya lo tienes)
      # Asegúrate de que use las variables de entorno correctas para tu servidor ACR
    - name: Build and push Docker image
      env: # Define las variables si no están definidas globalmente
          ACR_LOGIN_SERVER: distribunaia.azurecr.io
          IMAGE_NAME: libro-app # O el nombre que usaste para tu imagen
      run: |
          docker build . -t $ACR_LOGIN_SERVER/$IMAGE_NAME:${{ github.sha }}
          docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:${{ github.sha }}
          # Opcional: Si también necesitas 'latest'
          # docker tag $ACR_LOGIN_SERVER/$IMAGE_NAME:${{ github.sha }} $ACR_LOGIN_SERVER/$IMAGE_NAME:latest
          # docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:latest

    - name: Build and push container image to registry
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: distribunaia.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_913730c218ce43d5a2d9ab99145fffc5 }}/libro-app:${{ github.sha }}
        file: ./Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'appdistribunaia'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_e293b7df465a4de5ae8e087e1ae42a0a }}
        images: 'distribunaia.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_913730c218ce43d5a2d9ab99145fffc5 }}/libro-app:${{ github.sha }}'
